#!/home/nitish/cloudformation/bin/python

import urllib.request as request
import json
#import boto3
import troposphere
import yaml

class Unixtime:
    def userinput(self):
        self.state = input("Enter State: ")
        self.province = input("Enter Province: ")
        self.urlstring = "http://worldtimeapi.org/api/timezone/" + self.state + "/" + self.province + ".json"
        print("URL request string: ", self.urlstring)
        self.url()
        self.extract()
    
    def url(self):
        with request.urlopen(self.urlstring) as response:
            if response.getcode() == 200:
                source = response.read()
                self.data = json.loads(source)
                #print(json.dumps(self.data))
            else:
                print('An error occurred while attempting to retrieve data from the API.')

    def extract(self):
        global time 
        time = self.data.get('unixtime')
        print("UnixTime: ", time)

class Cloudformation(Unixtime):
    def auth(self):
        #self.session = boto3.Session(profile_name='illusivedeveloper')
        pass

    def stack(self):
        #stack_client = self.session.client('cloudformation')
        self.urlstring = "https://s3.amazonaws.com/cloudformation-templates-us-east-1/EC2InstanceWithSecurityGroupSample.template"
        with request.urlopen(self.urlstring) as response:
            if response.getcode() == 200:
                jsonsource = response.read()
                self.data = json.loads(jsonsource)
                #print(json.dumps(self.data))
                #print(yaml.dump(self.data, allow_unicode=True))
                testyaml = yaml.dump(self.data, allow_unicode=True)
                with open('test.yaml', 'w') as f:
                    f.write(testyaml)

    def export(self):
        pass

if __name__ == "__main__":
    ut = Unixtime()
    ut.userinput()

    cfn = Cloudformation()
    cfn.stack()